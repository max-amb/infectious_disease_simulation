"""
Defines CreateMap class, responsible for creating and drawing the map with buildings and roads.

Imports:
    pygame
    display: Holds display properties, pygame modules, to manage display window.
    tilemap: Create tilemap with different types of buildings.
    roads: Handles the drawing of roads using a MST.

Classes:
    CreateMap
"""
import display
import tilemap
import roads

class CreateMap:
    """
    A class to create and draw a map with buildings and roads.

    Attributes:
        __building_width (int): The building width
        __building_height (int): The building height
        __display (display.Display): The Display object where the map will be rendered.
        __tilemap (tilemap.Tilemap): The Tilemap object that manages placing and drawing the buildings on the map.
        __roads (roads.Roads): The Roads object that manages and draws roads on the map.
    """
    def __init__(self, display_obj: display.Display,
                 num_houses: int, num_offices: int,
                 building_width: int, building_height: int) -> None:
        """
        initialises the map with the given parameters and sets up the display and tilemap.

        Args:
            display_obj (display.Display): The display surface.
            num_houses (int): The number of houses to be placed.
            num_offices (int): The number of offices to be placed.
            building_width (int): The width of each building in the tilemap.
            building_height (int): The height of each building in the tilemap.
        """
        self.__building_width: int = building_width
        self.__building_height: int = building_height
        self.__display: display.Display = display_obj
        print("Generating Tilemap...")
        self.__tilemap: tilemap.Tilemap = tilemap.Tilemap(self.__display,
                                                          num_houses, num_offices,
                                                          building_width, building_height)
        self.__roads: roads.Roads = None # Roads initialised to None (set later)

    def draw(self, pause: bool, additional_roads: bool) -> None:
        """
        Handles the map drawing.
        Draws the buildings on the tilemap (renders it).
        Draws the roads onto the tilemap.

        Args:
            pause (bool): True if display process to be shown, False if not.
            additional_roads (bool): True if additional roads to be drawn, False if not.
        """
        print("Drawing Tilemap...")
        self.__tilemap.render(pause) # Draw tilemap
        print("Calculating Roads...")
        self.__roads = roads.Roads(self.__display, # Calculate roads
                                   self.__tilemap.get_map(),
                                   self.__building_width, self.__building_height,
                                   additional_roads)
        print("Drawing Roads...")
        self.__roads.draw_roads(pause) # Draw roads
        self.__display.update()

    def get_tilemap(self) -> tilemap.Tilemap:
        """
        Returns the Tilemap object.
        
        Returns:
            tilemap.Tilemap: Tilemap object that manages the buildings on the map.
        """
        return self.__tilemap

    def get_roads(self) -> dict[tuple[int, int], list[tuple[tuple[int, int], int]]]:
        """
        Returns the roads generated by the Roads class.

        Returns:
            dict[tuple[int, int], list[tuple[tuple[int, int], int]]]: Dictionary of roads generated.
        """
        return self.__roads.get_roads()
